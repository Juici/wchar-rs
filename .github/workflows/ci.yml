name: ci

on:
  pull_request:
  push:
  schedule:
    - cron: '00 00 * * *'

env:
  # Coloured output from Cargo.
  CARGO_TERM_COLOR: always
  # Emit backtraces on panics.
  RUST_BACKTRACE: 1

jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Minimum supported version.
          - rust: 1.45.0
            os: ubuntu-latest
          # Standard toolchain versions.
          - rust: stable
            os: ubuntu-latest
          - rust: beta
            os: ubuntu-latest
          - rust: nightly
            os: ubuntu-latest
          # Platform support.
          - rust: stable
            os: windows-latest
          - rust: stable
            os: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal

      - name: Run tests
        run: cargo test --verbose --workspace

      - name: Run tests (nightly)
        if: matrix.rust == 'nightly'
        run: cargo test --verbose --workspace --features nightly

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check
